#!/usr/bin/env bash

getMainWorktreeDir() {
	echo `git worktree list | awk 'NR==1{ print $1; exit }'`
}

# Worktrees share the same recent-branches file, stored under the main worktree's git directory.
getRecentBranchesFile() {
	local MAIN_WORKTREE_DIR=`getMainWorktreeDir`

	if test -d $MAIN_WORKTREE_DIR/.git; then
		echo $MAIN_WORKTREE_DIR"/.git/recent-branches"
	else
		echo $MAIN_WORKTREE_DIR"/recent-branches"
	fi
}

RECENT_BRANCHES_FILE=`getRecentBranchesFile`

trimRecentBranches() {
	cat $RECENT_BRANCHES_FILE | awk 'length($0) > 0 && !seen[$0]++ && length(seen) < 21' > "${RECENT_BRANCHES_FILE}.tmp"
	mv "${RECENT_BRANCHES_FILE}.tmp" $RECENT_BRANCHES_FILE
}

addNewBranch() {
	touch $RECENT_BRANCHES_FILE
	BRANCH=`git reflog | awk 'NR==1{ print $6; exit }'`

	git show-ref --verify --quiet "refs/heads/$BRANCH"
	if [ "$?" == "0" ]; then
		echo $BRANCH | cat - $RECENT_BRANCHES_FILE > "${RECENT_BRANCHES_FILE}.tmp"
		mv "${RECENT_BRANCHES_FILE}.tmp" $RECENT_BRANCHES_FILE
		trimRecentBranches
	fi
}

if [[ "$3" = "1" ]]; then
	addNewBranch &
fi

# Execute the local post-checkout hook
LOCAL_HOOK="$(getMainWorktreeDir)/.git/hooks/post-checkout"
if [ -x $LOCAL_HOOK ]; then
    $LOCAL_HOOK "$@"
fi
